pollutantmean("specdata","nitrate")
source("pollutantmean.R")
pollutantmean("specdata","nitrate")
?list
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",5:10)
source("complete.R")
source("complete.R")
source("complete.R")
source("pollutantmean.R")
complete("specdata",5:10)
source("complete.R")
complete("specdata",5:10)
data = read.csv("specdata/005.csv")
head(data,15)
is.na(head(data,15))
source("complete.R")
complete("specdata",5:10)
complete("specdata",5)
complete("specdata",5:5)
source("complete.R")
source("complete.R")
complete("specdata",5:5)
?cbind
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
complete("specdata",5)
complete("specdata",5:6)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:5)
complete("specdata",5:22)
complete("specdata",5:5)
source("complete.R")
complete("specdata",5:22)
?corr
?cor
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
?rbins
?rbind
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
?na.omit
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
?cor
cr <- corr("specdata",100)
complete(cr)
summary(cr)
head(cr)
source("corr.R")
corr("specdata",100)
?summary
?vector
source("corr.R")
corr("specdata",100)
source("corr.R")
corr("specdata",100)
summary(cr)
?summary
corr("specdata",150)
summary(cr)
cr <- corr("specdata",100)
summary(cr)
corr("specdata",150)
corr("specdata",100)
summary(cr)
corr("specdata",5000)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
corr("specdata")
cr <- corr("specdata",150)
length(cr)
complete("specdata")
cr <- corr("specdata")
length(cr)
source("corr.R")
cr <- corr("specdata")
length(cr)
summary(cr)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source("pollutantmean.R")
pollutantmean("specdata","sulfate")
swirl()
library("swirl.R")
library(swirl)
swirl()
install_from_swirl("Regression_Models")
install_from_swirl("Data_Analysis")
install_from_swirl("Exploratory_Data_Analysis")
install_from_swirl("Getting_and_Cleaning_Data")
install_from_swirl("Statistical_Inference")
swirl()
Sys.Date()
mean(c(2.4.5))
mean(c(2,4,5))
submit()
boring_function('My
| first function!')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
telegram("Good", "morning")
telegram
submit()
telegram
telegram("Good", "morning")
submit()
submit()
mad_libs("KL","big","cake")
play()
mad_libs(place="KL","adjective=big",noun="cake")
mad_libs(place="KL",adjective="big",noun="cake")
nxt()
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
library("xlsx")
data <- readxlsx("gas.xlsx",sheetIndex=1,header=TRUE)
data <- read.xlsx("gas.xlsx",sheetIndex=1,header=TRUE)
head(data)
class(data)
head(data)
dat <- data[18:23,7:15]
head(dat)
dat <- read.xlsx("gas.xlsx",sheetIndex=1,header=TRUE,rowIndex=18:23,colIndex=7:15)
head(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
library("XML")
install.package("XML")
install.packages("XML")
library("XML")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xml_dat <- xmlTreeParse(fileURL,useInternal=TRUE)
?xmlTreeParse
xml_dat <- xmlTreeParse(fileURL,useInternalNodes=TRUE)
xml_dat <- xmlTreeParse(fileURL)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xml_dat <- xmlTreeParse(fileURL,useInternal=TRUE)
class(xml_dat)
rootNode <- xmlRoot(xml_dat)
xmlName(rootNode)
names(rootNode)
?xmlValue
xpathSApply(rootNode,"//zipcode",xmlValue)
zip <- xpathSApply(rootNode,"//zipcode",xmlValue)
table(zip)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileURL,"idaho_housing.csv", method="curl")
DT <- fread("idaho_housing.csv")
library(data.table)
install.packages("data.tables")
library(data.table)
library("data.table")
install.packages("data.table")
library("data.table")
DT <- fread("idaho_housing.csv")
head(DT)
DT[,mean(pwgtp15),by=SEX]
install.packages(RMySQL)
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("jsonlite")
install.packages("rjsonio")
install.packages("RJSONIO")
source("twitterapi.R")
source("httr")
library(httr)
library(RJSONIO)
library(jsonlite)
source("twitterapi.R")
source("twitterapi.R")
library(httr)
library(jsonlite)
library(RJSONIO)
source("twitterapi.R")
install.packages("base64enc")
install.packages("base64enc")
source("twitterapi.R")
json2
json2[1,1:4]
json2[1,1:4]
source("twitterapi.R")
source("twitterapi.R")
json2[1,1:4]
source("githubapi.R")
head(json2_github)
?sign_oauth1.0
?config
?oauth_endpoints
source("githubapi.R")
source("githubapi.R")
library("httr")
source("githubapi.R")
install.packages("httpuv")
source("githubapi.R")
source("githubapi.R")
source("githubapi.R")
source("githubapi.R")
library("httpuv")
source("githubapi.R")
source("githubapi.R")
library("jsonlite")
library("RJSONIO")
source("githubapi.R")
json2_github
head(json2_github)
subset(json2_github,name="datasharing",select="created_at")
subset(json2_github,name=="datasharing",select="created_at")
?download_files
?download_file
install.packages("RMySQL")
install.packages("sqldf")
source("dbquery.R")
rownames(acs)
colnames(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
install.packages("sqldf")
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
head(sqldf("select pwgtp1, AGEP from acs where AGEP < 50"))
?unique
source("readHTML.R")
htmlCode
?nchar
class(htmlCode)
nchar(htmlCode)
select_vector <- htmlCode[c(10,20,30,100)]
select_vector
nchar(select_vector)
?read.table
source("sst.R")
source("sst.R")
source("sst.R")
head(data)
source("sst.R")
head(data)
source("sst.R")
source("sst.R")
head(data)
source("sst.R")
head(data)
head(data[,4])
sum(data[,4])
nchar(select_vector)
library("swirl")
ls()
rm(list=ls())
swirl()
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,-(r_arch:country)
)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-5:-20
-(5:20)
select(cran,-(X:size))
filter(cran, package=="swirl")
filter(cran,r_version=="3.1.1", country=="US")
?Camparison
??Camparison
?Comparison
filter(cran,r_version<="3.0.2",users IN ("India"))
filter(cran,r_version<="3.0.2",users IN (India))
filter(cran,r_version<="3.0.2",users=="India")
filter(cran,r_version<="3.0.2",country=="India")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux_gnu")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran <- select(cran,size:ip_id)
cran2 <- select(cran,size:ip_id)
arrange(cran, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_gb = size_mb/2^10)
mutate(cran3,size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes = mean(size))
ls()
getwd()
setwd("/Users/kwokmun/uci_dataset/train")
list.files()
train_data <- read.table("X_train.txt")
head(train_data)
dim(train_data)
train_data_y <- read.table("y_train.txt")
dim(train_data_y)
class(train_data_y)
getwd()
setwd("/Users/kwokmun/uci_dataset/train/Inertial.Signals")
setwd("/Users/kwokmun/uci_dataset/train/Inertial Signals")
list.files()
inertial_data <- read.table("body_acc_x_train.txt")
dim(inertial_data)
head(inertial_data)
